"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
/**
 * > **Note:** `aws.alb.Listener` is known as `aws.lb.Listener`. The functionality is identical.
 *
 * Provides information about a Load Balancer Listener.
 *
 * This data source can prove useful when a module accepts an LB Listener as an
 * input variable and needs to know the LB it is attached to, or other
 * information specific to the listener in question.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const config = new pulumi.Config();
 * const listenerArn = config.require("listenerArn");
 *
 * const listener = pulumi.output(aws.lb.getListener({
 *     arn: listenerArn,
 * }, { async: true }));
 * const selected = pulumi.output(aws.lb.getLoadBalancer({
 *     name: "default-public",
 * }, { async: true }));
 * const selected443 = selected.apply(selected => aws.lb.getListener({
 *     loadBalancerArn: selected.arn!,
 *     port: 443,
 * }, { async: true }));
 * ```
 */
function getListener(args, opts) {
    args = args || {};
    if (!opts) {
        opts = {};
    }
    if (!opts.version) {
        opts.version = utilities.getVersion();
    }
    return pulumi.runtime.invoke("aws:lb/getListener:getListener", {
        "arn": args.arn,
        "loadBalancerArn": args.loadBalancerArn,
        "port": args.port,
    }, opts);
}
exports.getListener = getListener;
//# sourceMappingURL=getListener.js.map