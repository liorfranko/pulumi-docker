"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
/**
 * ## Example Usage
 *
 * The following shows outputing all network interface ids in a region.
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const exampleNetworkInterfaces = pulumi.output(aws.ec2.getNetworkInterfaces({ async: true }));
 *
 * export const example = exampleNetworkInterfaces.ids;
 * ```
 *
 * The following example retrieves a list of all network interface ids with a custom tag of `Name` set to a value of `test`.
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const example = pulumi.output(aws.ec2.getNetworkInterfaces({
 *     tags: {
 *         Name: "test",
 *     },
 * }, { async: true }));
 *
 * export const example1 = example.ids;
 * ```
 *
 * The following example retrieves a network interface ids which associated
 * with specific subnet.
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const exampleNetworkInterfaces = aws_subnet_test.id.apply(id => aws.ec2.getNetworkInterfaces({
 *     filters: [{
 *         name: "subnet-id",
 *         values: [id],
 *     }],
 * }, { async: true }));
 *
 * export const example = exampleNetworkInterfaces.ids;
 * ```
 */
function getNetworkInterfaces(args, opts) {
    args = args || {};
    if (!opts) {
        opts = {};
    }
    if (!opts.version) {
        opts.version = utilities.getVersion();
    }
    return pulumi.runtime.invoke("aws:ec2/getNetworkInterfaces:getNetworkInterfaces", {
        "filters": args.filters,
        "tags": args.tags,
    }, opts);
}
exports.getNetworkInterfaces = getNetworkInterfaces;
//# sourceMappingURL=getNetworkInterfaces.js.map