import * as pulumi from "@pulumi/pulumi";
import * as outputs from "../types/output";
/**
 * Use this data source to get information about a WorkSpaces Bundle.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as aws from "@pulumi/aws";
 *
 * const example = pulumi.output(aws.workspaces.getBundle({
 *     name: "Value with Windows 10 and Office 2016",
 *     owner: "AMAZON",
 * }, { async: true }));
 * ```
 */
export declare function getBundle(args?: GetBundleArgs, opts?: pulumi.InvokeOptions): Promise<GetBundleResult>;
/**
 * A collection of arguments for invoking getBundle.
 */
export interface GetBundleArgs {
    /**
     * The ID of the bundle.
     */
    readonly bundleId?: string;
    /**
     * The name of the bundle. You cannot combine this parameter with `bundleId`.
     */
    readonly name?: string;
    /**
     * The owner of the bundles. You have to leave it blank for own bundles. You cannot combine this parameter with `bundleId`.
     */
    readonly owner?: string;
}
/**
 * A collection of values returned by getBundle.
 */
export interface GetBundleResult {
    /**
     * The ID of the bundle.
     */
    readonly bundleId?: string;
    /**
     * The compute type. See supported fields below.
     */
    readonly computeTypes: outputs.workspaces.GetBundleComputeType[];
    /**
     * The description of the bundle.
     */
    readonly description: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * The name of the compute type.
     */
    readonly name?: string;
    /**
     * The owner of the bundle.
     */
    readonly owner?: string;
    /**
     * The root volume. See supported fields below.
     */
    readonly rootStorages: outputs.workspaces.GetBundleRootStorage[];
    /**
     * The user storage. See supported fields below.
     */
    readonly userStorages: outputs.workspaces.GetBundleUserStorage[];
}
